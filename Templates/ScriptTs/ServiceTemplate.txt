
@{
//コード生成に必要な一時変数をまとめて定義する

  // クラス名
  string TargetClassName = Model.TemplateFilesConfig.HeadPrefix + Model.SiteDefinition.SiteVariableName + Model.TemplateFilesConfig.EndPrefix;


  // --- サービスが対象としているモデルクラス名を指定する

  // クラス名
  var ModelTemplateFilesConfig = Model.AllTemplateFilesConfig["Model"];

  // モデルクラス名称
  string ModelClassName = ModelTemplateFilesConfig.HeadPrefix + Model.SiteDefinition.SiteVariableName + ModelTemplateFilesConfig.EndPrefix;

  // ユーザー拡張要素が定義されたクラス名
  string ExtensionElementsClassName = ModelClassName + "ExtensionElements"; 

}
/**
 *
 * [注意]
 *  自動生成されたコードです。
 *  変更時には十分注意して変更してください。
 *
 *  [生成コマンド]
 *  https://github.com/yamada28go/HackPleasanterApiCli
 *
 *  [生成元テンプレートファイル]
 *  https://github.com/yamada28go/HackPleasanterApi.pleasanter-web-script
 *
 *  [動作に必用なライブラリ]
 *  https://www.npmjs.com/package/@@yamada28go/pleasanter-web-script-type-helper
 *
 */
import { HackPleasanterApi_ServiceBase ,  ViewFilterKey} from "@@yamada28go/pleasanter-web-script-type-helper";


import { @Raw(ModelClassName) } from "../Models/@Raw(ModelClassName)";

export class @Raw(TargetClassName) extends HackPleasanterApi_ServiceBase<  @Raw(ModelClassName)  > {
  /** サイトID */
  private static readonly SITE_ID_CONSTANT = @(Model.SiteDefinition.SiteId);

  // 対象としているサイトITを取得する
  override getSiteId(): number {
    return @Raw(TargetClassName) .SITE_ID_CONSTANT;
  }

  override makeItemType(_rawData: RecordDataItems):  @Raw(ModelClassName) {
    return new  @Raw(ModelClassName) (_rawData);
  }

              @* --- [Start] ClassHashの出力定義 [Start] --- *@
            @foreach (var item in Model.ClassifiedInterface.ClassHash) {
                    <text>
                    public static getFilterKey_</text> @Raw(item.VariableName) <text> ()
                    {
                        </text>
                        <text>
                        return new ViewFilterKey<  @Raw(ModelClassName)  >("@(item.ColumnName)");
                    }
                    </text>
            }
            @* --- [End] ClassHashの出力定義 [End] --- *@


            @* --- [Start] NumHashの出力定義 [Start] --- *@
            @foreach (var item in Model.ClassifiedInterface.NumHash) {
                    <text>
                    public static getFilterKey_</text> @Raw(item.VariableName) <text> ()
                    {
                        </text>
                        <text>
                        return new ViewFilterKey<  @Raw(ModelClassName)  >("@(item.ColumnName)");
                    }
                    </text>
            }
            @* --- [End] NumHashの出力定義 [End] --- *@

            @* --- [Start] DateHashの出力定義 [Start] --- *@
            @foreach (var item in Model.ClassifiedInterface.DateHash) {
                    <text>
                    public static getFilterKey_</text> @Raw(item.VariableName) <text> ()
                    {
                        </text>
                        <text>
                        return new ViewFilterKey<  @Raw(ModelClassName)  >("@(item.ColumnName)");
                    }
                    </text>
            }
            @* --- [End] DateHashの出力定義 [End] --- *@


            @* --- [Start] CheckHashの出力定義 [Start] --- *@
            @foreach (var item in Model.ClassifiedInterface.CheckHash) {
                    <text>
                    public static getFilterKey_</text> @Raw(item.VariableName) <text> ()
                    {
                        </text>
                        <text>
                        return new ViewFilterKey<  @Raw(ModelClassName)  >("@(item.ColumnName)");
                    }
                    </text>
            }
            @* --- [End] CheckHashの出力定義 [End] --- *@
}
